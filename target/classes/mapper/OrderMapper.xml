<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >  
<mapper namespace="com.swpu.sharebook.mapper.OrderMapper">
<resultMap type="com.swpu.sharebook.entity.Order" id="order">
<id column="id" property="id"/>
<result column="orderTime" property="orderTime"/>
<result column="orderStatus" property="orderStatus"/>
<!-- <result column="bId" property="bId"/> -->
<!-- <result column="userId" property="userId"/> -->
<result column="distrbutionId" property="distrbutionId"/>
<result column="orderBool" property="orderBool"/>
<result column="bookAccount" property="bookAccount"/>
<result column="isPay" property="isPay"/>
	<result column="returnTime" property="returnDate"/>
	<result column="sendStatus" property="sendStatus"/>
<association property="book" column="bId" javaType="com.swpu.sharebook.entity.Book">
<id column="bId" property="bId"/>
<result column="bName" property="bName"/>
<result column="bookPbulish" property="bPublish"/>
<result column="bookIntroduction" property="introduction"/>
<result column="writer" property="writer"/>
	<result column="bookPrice" property="bookPrice"/>
<result column="bookOtherImportantPath" property="bookOtherImportantPath"/>
</association>
<association property="user" column="userId" javaType="com.swpu.sharebook.entity.User">
<id column="userId" property="id"/>
		<result column="userName" property="userName" />
		<result column="studentId" property="studentId" />
		<result column="wechatNumber" property="wechatNumber" />
		<result column="dirmitoryNumber" property="dirmitoryNumber" />
</association>
</resultMap>
	<resultMap id="onlyOrder" type="com.swpu.sharebook.entity.Order">
		<id column="id" property="id"/>
		<result column="orderTime" property="orderTime"/>
		<result column="orderStatus" property="orderStatus"/>
		<result column="distrbutionId" property="distrbutionId"/>
		<result column="orderBool" property="orderBool"/>
		<result column="bookAccount" property="bookAccount"/>
		<result column="isPay" property="isPay"/>
		<association property="book" column="bId" javaType="com.swpu.sharebook.entity.Book">
			<id column="bId" property="bId"/>
			<result column="bookPrice" property="bookPrice"/>
		</association>
		<association property="user" column="userId" javaType="com.swpu.sharebook.entity.User">
			<id column="userId" property="id"/>
		</association>
	</resultMap>
	<!--用户没有支付的订单
	-->
	<resultMap id="OrderdontPay" type="com.swpu.sharebook.entity.Order">
		<id column="id" property="id"/>
		<result column="orderTime" property="orderTime"/>
		<result column="orderStatus" property="orderStatus"/>
		<result column="distrbutionId" property="distrbutionId"/>
		<result column="orderBool" property="orderBool"/>
		<result column="bookAccount" property="bookAccount"/>
		<result column="isPay" property="isPay"/>
		<result column="returnTime" property="returnDate"/>
		<result column="sendStatus" property="sendStatus"/>
		<association property="book" column="bId" javaType="com.swpu.sharebook.entity.Book">
		<id column="bId" property="bId"/>
		<result column="bName" property="bName"/>
		<result column="bookPbulish" property="bPublish"/>
		<result column="bookIntroduction" property="introduction"/>
		<result column="writer" property="writer"/>
		<result column="bookPrice" property="bookPrice"/>
		<result column="bookOtherImportantPath" property="bookOtherImportantPath"/>
		</association>
	</resultMap>
<!-- 插入订单的语句 -->
<insert id="addOrder" parameterType="com.swpu.sharebook.entity.Order"  useGeneratedKeys="true" keyProperty="id">
INSERT INTO `order` (orderTime, orderStatus, bId, userId, distrbutionId, orderBool,bookAccount)
VALUES
	(#{orderTime},#{orderStatus},#{book.bId},#{user.id},#{distrbutionId},#{orderBool},#{bookAccount})
</insert>
<!-- 
獲取用戶的所有信息
 -->
 <select id="getListAboutOrder" parameterType="com.swpu.sharebook.entity.Order" resultMap="order">
	 SELECT
	 `order`.id,
	 orderTime,
	 orderStatus,
	 order.bId,
	 order.userId,
	 distrbutionId,
	 orderBool,
	 order.bookAccount,
	 isPay,
	 returnTime,
	 sendStatus,
	 book.bId,
	 bName,
	 bookPbulish,
	 bookIntroduction,
	 bookPrice,
	 user.id,
	 studentId,
	 wechatNumber,
	 dirmitoryNumber
	 FROM
	 `order`,
	 book,
	 borringstatus,
	 user
 		<where> 
 			<choose>
 			<when test="id !=null">
 				order.id=#{id} 
 			</when>
 			<!-- 注意时间不要写为不等于字符串否则会出错的 -->
 			<when test="orderTime !=null ">
 				 and orderTime=#{orderTime}
 			</when>
 			<when test="user!=null and user.id !=null ">
 				and order.userId=#{user.id}
 			</when>
 			<when test="distrbutionId !=null ">
 				and distrbutionId=#{distrbutionId}
 			</when>
 			<!--<when test="isPay !=null">
				and isPay=#{isPay}
			</when>-->
 		<!-- 
 			<when test="orderBool !=null  ">
 			 	and orderBool=#{orderBool}
 			</when> 
 			-->
 		<!--	<when test="bookAccount!=null ">
 				and bookAccount=#{bookAccount}
 			</when>-->
 			</choose>
			AND `order`.bId = book.bId
			AND order.userId = user.id
			and order.isPay=1
			and order.id=oId
 		</where>
 </select>
	<!--获取用户待归还，待评价，待收货的订单
	-->
	<select id="getOrderWaitRRR" parameterType="com.swpu.sharebook.entity.Order" resultMap="order">
		SELECT
		`order`.id,
		orderTime,
		orderStatus,
		order.bId,
		order.userId,
		distrbutionId,
		orderBool,
		order.bookAccount,
		isPay,
		returnTime,
		sendStatus,
		book.bId,
		bName,
		bookPbulish,
		bookIntroduction,
		bookPrice,
		user.id,
		studentId,
		wechatNumber,
		dirmitoryNumber
		FROM
		`order`,
		book,
		borringstatus,
		user
		<where>
			<choose>
				<when test="user!=null and user.id !=null ">
					and order.userId=#{user.id}
				</when>
				<!--
				评价状态
				-->
                    <when test="orderBool !=null ">
                         and orderBool=#{orderBool}
                    </when>

                <!--配送状态
                -->

			</choose>
			<if test="sendStatus !=null">
				and sendStatus=#{sendStatus}
			</if>
			<if test="orderStatus !=null">
				and orderStatus =#{orderStatus}
			</if>
			AND `order`.bId = book.bId
			AND order.userId = user.id
			and order.isPay=1
			and order.id=oId
		</where>
	</select>
 <!-- 通过id查询订单 -->
 <select id="getOrderById" parameterType="java.lang.Integer" resultMap="order">
SELECT
	`order`.id,
	orderTime,
	orderStatus,
	order.bId,
	order.userId,
	distrbutionId,
	orderBool,
	order.bookAccount,
	isPay,
	returnTime,
	sendStatus,
	book.bId,
	bName,
	bookPbulish,
	bookIntroduction,
	bookPrice,
	user.id,
	studentId,
	wechatNumber,
	dirmitoryNumber
FROM
	`order`,
	book,
	borringstatus,
user
WHERE
	(
	`order`.id = #{id}
	AND `order`.bId = book.bId
	AND order.userId = user.id
	AND order.id=oId
	)
 </select>
 <!-- 更新数据库的中order信息的状态和时间 -->
 <update id="updateOrder"  parameterType="com.swpu.sharebook.entity.Order">
 		update `order`
 		<trim prefix="set" suffixOverrides=",">
  <if test="orderTime !=null  "> orderTime=#{orderTime},</if>
  <if test="orderStatus !=null  ">orderStatus=#{orderStatus},</if>
  <if test="book!=null and book.bId !=null ">bId=#{book.bId},</if>
  <if test="user!=null and user.id !=null  ">userId=#{user.id},</if>
  <if test="distrbutionId !=null ">distrbutionId=#{distrbutionId},</if>
  <if test="orderBool !=null  ">orderBool=#{orderBool},</if>
  <if test="bookAccount!=null and bookAccount!='' ">bookAccount=#{bookAccount},</if>
  <if test="isPay!=null">isPay=#{isPay}</if>
 </trim> where(order.id=#{id})
 </update>
 <select id="getListAoubtUserOrder" parameterType="com.swpu.sharebook.entity.Order" resultMap="order">
SELECT
	`order`.id,
	orderTime,
	orderStatus,
	orrder.bId,
	order.userId,
	distrbutionId,
	orderBool,
	order.bookAccount,
	isPay,
	returnTime,
	sendStatus,
	book.bId,
	bName,
	bookPbulish,
	bookIntroduction,
	bookPrice,
	user.id,
	studentId,
	wechatNumber,
	dirmitoryNumber
FROM
	`order`,
	book,
	borringstatus,
user
WHERE
	(
	`order`.userId=#{user.id} and orderStatus=#{orderStatus}
	AND `order`.bId = book.bId
	AND order.userId = user.id
	AND order.id=oId
	)
 </select>
	<!--
	判断订单是否被支付，如果被支付就不能进行处理
	-->
	<select id="getIsPay" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		select isPay  from `order`where(id=#{orderId})
	</select>
	<!--
	判断订单是否被取消
	-->

	<select id="getOrderStatus" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		select orderStatus  from `order`where(id=#{orderId})
	</select>
	<!--
	修改用户评论信息
	-->
	<update id="updateBool" parameterType="java.lang.Object">
		update `order` set orderBool=#{orderBool} where (id=#{id})
	</update>
	<!--
	获取存粹的order
	-->
	<select id="getOrderByIdOnlyOrder" parameterType="java.lang.Integer" resultMap="onlyOrder">
		SELECT
	`order`.id,
	orderTime,
	orderStatus,
	order.bId,
	order.userId,
	distrbutionId,
	orderBool,
	order.bookAccount,
	isPay,
	book.bId,
	bookPrice,
	user.id
FROM
	`order`,
	book,
user
WHERE
	(
	`order`.id=#{id}
	AND `order`.bId = book.bId
	AND order.userId = user.id
	)
	</select>
<!--
	修改支付方式
-->
	<update id="updatePay" parameterType="java.lang.Object" >
		update `order` set isPay=#{isPay} where id=#{id}
	</update>
	<!--
	获取没有被支付的订单
	-->
	<select id="getListOrderNotPay" parameterType="com.swpu.sharebook.entity.Order" resultMap="OrderdontPay">
		SELECT
	`order`.id,
	orderTime,
	orderStatus,
	order.bId,
	order.userId,
	distrbutionId,
	orderBool,
	order.bookAccount,
	isPay,
	book.bId,
	bName,
	bookPbulish,
	bookIntroduction,
	bookPrice
FROM
	`order`,
	book,
user
WHERE
	(
	`order`.userId=#{user.id}
	and isPay=0
	AND `order`.bId = book.bId
	AND order.userId = user.id

	)
	</select>
	<!--
		批量更新用户订单信息
		-->
	<update id="updateOrderBench">
		<foreach collection="orderLists" item="order">
			UPDATE `order`
			SET orderStatus = #{order.orderStatus},orderTime=#{order.orderTime},isPay=#{order.isPay},distrbutionId=#{order.distrbutionId} where (id=#{order.id});
		</foreach>
	</update>
	<!--删除订单
	-->
	<delete id="deleteOrder" parameterType="java.lang.Integer">
		delete  from `order` where(id=#{id})
	</delete>
	<!--更新用户归还的状态的信息
	-->
	<update id="updateOrderRetrunStatus" parameterType="java.lang.Integer">
		update `order` set orderStatus =0 where(id=#{oId})
	</update>
</mapper>