<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >  
<mapper namespace="com.swpu.sharebook.mapper.UserOrderStatusMapper">
<resultMap type="com.swpu.sharebook.entity.BorringStatus" id="borringStatus">
	<id column="oId" property="oId"/>
	<result column="userId" property="userId"/>
	<result column="bId" property="bId"/>
	<result column="borrwingStatus" property="borrwingStatus"/>
	<result column="loanHour" property="loanHour"/>
	<result column="returnTime" property="returnTime"/>
	<result column="sendStatus" property="sendStatus"/>
</resultMap>
<!-- 插入操作即用户需要将 -->
<insert id="addStatus" parameterType="com.swpu.sharebook.entity.BorringStatus">
	insert into borringstatus (oId,userId,bId,borrwingStatus,loanHour,sendStatus,returnTime)
	 values(#{oId},#{userId},#{bId},#{borrwingStatus},#{loanHour},#{sendStatus},#{returnTime})
</insert>
<select id="selectBorringStatusById" parameterType="com.swpu.sharebook.entity.BorringStatus" resultMap="borringStatus">
	/*select userId, bId,borrwingStatus,loanHour,returnTime,sendStatus from borringstatus*/
	select *from borringstatus where(oId=#{oId})
</select>
<!-- 更新操作实现 -->
<update id="updateBorringStatus" parameterType="com.swpu.sharebook.entity.BorringStatus">
update borringstatus 
<trim prefix="set" suffixOverrides=",">
  <if test="borrwingStatus!=null ">borrwingStatus=#{borrwingStatus},</if>
  <if test="sendStatus!=null ">sendStatus=#{sendStatus},</if>
  <if test="loanHour !=null">loanHour=#{loanHour},</if>
  <if test="returnTime !=null">returnTime=#{returnTime},</if>
 </trim>
 where(oId=#{oId})
</update>

 <!-- 删除订单 -->
 <delete id="delete" parameterType="com.swpu.sharebook.entity.BorringStatus">
 delete  from `borringstatus` where(oId=#{oId}) 
 </delete>
	<!--批量增加用户订单状态
	注意index代表的是List中的索引，item才是对应的值
	-->
	<insert id="addStatusBench" >
		insert into borringstatus (oId,bId,userId,borrwingStatus,loanHour,sendStatus) values
		<foreach collection="listBorringStatus" index="index" item="borringStatus" separator=",">
			(
			#{borringStatus.oId},#{borringStatus.bId},#{borringStatus.userId},#{borringStatus.borrwingStatus},#{borringStatus.loanHour},#{borringStatus.sendStatus}
			)
		</foreach>
	</insert>
	<!--<select id="getSendOrderStatus" parameterType="java.lang.Integer" resultMap="borringStatus">
		 SELECT
	bId,
	userId,
	sendStatus
FROM
	borringstatus
WHERE
userId
	 in (
SELECT
userId
FROM
	`order`
WHERE
	( distrbutionId = #{distributeId})
	and sendStatus=1
	)
	</select>
	<update id="updateBorringStatusBench" parameterType="java.util.List">
		<foreach collection="borringStatusList" item="borringStatus">
			UPDATE borringstatus
			SET loanHour = #{borringStatus.loanHour},sendStatus=0 where(bId=#{borringStatus.bId} and userId=#{borringStatus.userId});
		</foreach>
	</update>-->
</mapper>